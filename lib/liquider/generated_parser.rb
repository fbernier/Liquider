#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Liquider
  class GeneratedParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     8,    75,    17,    54,    66,    79,    54,    54,     7,    70,
     8,    81,    17,   113,    66,     3,     4,    80,     7,    18,
    54,    54,    66,    19,    72,    20,    67,   108,    21,    18,
    54,    22,    23,    19,    54,    20,    67,     8,    21,    17,
   121,    22,    23,    97,    67,     7,    74,     8,    70,    17,
    76,    54,   117,    54,   124,     7,    18,    54,    64,    65,
    19,    54,    20,    54,    69,    21,    18,    54,    22,    23,
    19,    78,    20,   136,     8,    21,    17,    77,    22,    23,
    36,   116,     7,   115,     8,    31,    17,    33,    32,    34,
    35,   107,     7,    18,    83,   130,    95,    19,   123,    20,
   131,   129,    21,    18,    54,    22,    23,    19,    53,    20,
   126,     8,    21,    17,    52,    22,    23,    36,    42,     7,
   103,     8,    31,    17,    33,    32,    34,    35,   133,     7,
    18,    51,   130,    50,    19,    46,    20,   131,   129,    21,
    18,   137,    22,    23,    19,    24,    20,    54,     8,    21,
    17,   nil,    22,    23,    36,   nil,     7,   nil,     8,    31,
    17,    33,    32,    34,    35,   nil,     7,    18,   112,   111,
   110,    19,   nil,    20,    62,    63,    21,    18,   nil,    22,
    23,    19,   nil,    20,   nil,     8,    21,    17,   nil,    22,
    23,    36,   nil,     7,   nil,     8,    31,    17,    33,    32,
    34,    35,   nil,     7,    18,   112,   111,   110,    19,   nil,
    20,    62,    63,    21,    18,   nil,    22,    23,    19,   nil,
    20,    62,    63,    21,    36,   nil,    22,    23,   nil,    31,
    42,    33,    32,    34,    35,    36,    62,    63,    62,    63,
    31,    36,    33,    32,    34,    35,    31,    36,    33,    32,
    34,    35,    31,    36,    33,    32,    34,    35,    31,    36,
    33,    32,    34,    35,    31,    36,    33,    32,    34,    35,
    31,    36,    33,    32,    34,    35,    31,    36,    33,    32,
    34,    35,    31,    42,    33,    32,    34,    35,    36,    62,
    63,    62,    63,    31,    36,    33,    32,    34,    35,    31,
    36,    33,    32,    34,    35,    31,    36,    33,    32,    34,
    35,    31,    36,    33,    32,    34,    35,    31,    36,    33,
    32,    34,    35,    31,    36,    33,    32,    34,    35,    31,
    36,    33,    32,    34,    35,    31,    36,    33,    32,    34,
    35,    31,    36,    33,    32,    34,    35,    31,    36,    33,
    32,    34,    35,    31,    42,    33,    32,    34,    35,    36,
    64,    65,    64,    65,    31,    36,    33,    32,    34,    35,
    31,    36,    33,    32,    34,    35,    31,   nil,    33,    32,
    34,    35,    55,    56,    57,    58,    59,    60,    61,    62,
    63 ]

racc_action_check = [
     0,    46,     0,    96,    94,    50,    44,    98,     0,    99,
   136,    52,   136,   102,    93,     0,     0,    51,   136,     0,
   114,    68,    29,     0,    44,     0,    94,    96,     0,   136,
    47,     0,     0,   136,   120,   136,    93,    81,   136,    81,
   114,   136,   136,    68,    29,    81,    45,   133,    40,   133,
    47,    49,   106,   134,   120,   133,    81,    48,    28,    28,
    81,   105,    81,   104,    39,    81,   133,    38,    81,    81,
   133,    49,   133,   134,     5,   133,     5,    48,   133,   133,
    58,   105,     5,   104,    76,    58,    76,    58,    58,    58,
    58,    83,    76,     5,    54,   138,    66,     5,   119,     5,
   138,   138,     5,    76,    25,     5,     5,    76,    24,    76,
   122,    16,    76,    16,    23,    76,    76,   103,    70,    16,
    78,   111,   103,   111,   103,   103,   103,   103,   130,   111,
    16,    22,   125,    21,    16,    17,    16,   125,   125,    16,
   111,   135,    16,    16,   111,     1,   111,    71,   115,   111,
   115,   nil,   111,   111,     8,   nil,   115,   nil,   121,     8,
   121,     8,     8,     8,     8,   nil,   121,   115,   127,   127,
   127,   115,   nil,   115,    84,    84,   115,   121,   nil,   115,
   115,   121,   nil,   121,   nil,   124,   121,   124,   nil,   121,
   121,    36,   nil,   124,   nil,    77,    36,    77,    36,    36,
    36,    36,   nil,    77,   124,   101,   101,   101,   124,   nil,
   124,    85,    85,   124,    77,   nil,   124,   124,    77,   nil,
    77,    27,    27,    77,   107,   nil,    77,    77,   nil,   107,
   107,   107,   107,   107,   107,   112,    87,    87,    88,    88,
   112,    18,   112,   112,   112,   112,    18,    19,    18,    18,
    18,    18,    19,     3,    19,    19,    19,    19,     3,    55,
     3,     3,     3,     3,    55,    56,    55,    55,    55,    55,
    56,    57,    56,    56,    56,    56,    57,     4,    57,    57,
    57,    57,     4,     4,     4,     4,     4,     4,    59,    89,
    89,    90,    90,    59,    60,    59,    59,    59,    59,    60,
    61,    60,    60,    60,    60,    61,    62,    61,    61,    61,
    61,    62,    63,    62,    62,    62,    62,    63,    64,    63,
    63,    63,    63,    64,    65,    64,    64,    64,    64,    65,
    80,    65,    65,    65,    65,    80,    67,    80,    80,    80,
    80,    67,    20,    67,    67,    67,    67,    20,    69,    20,
    20,    20,    20,    69,    69,    69,    69,    69,    69,    79,
    91,    91,    92,    92,    79,   131,    79,    79,    79,    79,
   131,    42,   131,   131,   131,   131,    42,   nil,    42,    42,
    42,    42,    26,    26,    26,    26,    26,    26,    26,    86,
    86 ]

racc_action_pointer = [
   -19,   145,   nil,   230,   254,    55,   nil,   nil,   131,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    92,    99,   218,   224,
   319,   105,   103,    86,   108,   102,   370,   212,    51,    19,
   nil,   nil,   nil,   nil,   nil,   nil,   168,   nil,    65,    58,
    42,   nil,   348,   nil,     4,     9,   -21,    28,    55,    49,
   -43,     6,   -11,   nil,    66,   236,   242,   248,    57,   265,
   271,   277,   283,   289,   295,   301,    68,   313,    19,   325,
    89,   145,   nil,   nil,   nil,   nil,    65,   176,    75,   336,
   307,    18,   nil,    86,   165,   202,   380,   227,   229,   280,
   282,   353,   355,    11,     1,   nil,     1,   nil,     5,     3,
   nil,   166,   -30,    94,    61,    59,     0,   201,   nil,   nil,
   nil,   102,   212,   nil,    18,   129,   nil,   nil,   nil,    57,
    32,   139,    61,   nil,   166,    92,   nil,   129,   nil,   nil,
   106,   342,   nil,    28,    51,    95,    -9,   nil,    55,   nil ]

racc_action_default = [
    -4,   -68,    -1,   -68,   -38,    -5,    -6,    -8,   -68,   -10,
   -47,   -48,   -49,   -50,   -51,   -52,    -4,   -68,   -68,   -68,
   -68,   -68,   -68,   -68,   -68,    -2,   -11,   -15,   -23,   -26,
   -29,   -32,   -33,   -34,   -35,   -36,   -68,    -3,   -42,   -39,
   -40,   -44,   -68,    -7,   -68,   -68,   -68,   -68,   -68,   -68,
   -68,   -68,   -68,   140,   -68,   -68,   -68,   -68,   -68,   -68,
   -68,   -68,   -68,   -68,   -68,   -68,   -68,   -68,   -68,   -68,
   -68,   -46,    -9,   -53,   -55,   -54,    -4,    -4,   -68,   -68,
   -68,    -4,   -12,   -13,   -16,   -17,   -18,   -19,   -20,   -21,
   -22,   -24,   -25,   -27,   -28,   -30,   -68,   -37,   -43,   -41,
   -45,   -68,   -68,   -68,   -68,   -68,   -68,   -38,   -31,   -56,
   -57,    -4,   -68,   -60,   -68,    -4,   -66,   -67,   -14,   -68,
   -68,    -4,   -68,   -58,    -4,   -68,   -65,   -68,   -61,   -62,
   -68,   -68,   -59,    -4,   -68,   -68,    -4,   -63,   -68,   -64 ]

racc_goto_table = [
     2,    37,   109,    25,   128,    93,    94,    82,    44,    84,
    85,    86,    87,    88,    89,    90,    45,   139,    47,    48,
    49,    91,    92,    99,   100,    73,    43,     1,   132,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    68,   nil,   nil,   nil,
   nil,   nil,    71,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    96,   nil,    98,
   nil,   nil,   nil,   nil,   nil,   nil,   101,   102,   nil,   104,
   105,   106,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   114,   118,   nil,   nil,   nil,   nil,   nil,
   nil,   119,   120,   nil,   nil,   122,   nil,   nil,   nil,   nil,
   nil,   125,   nil,   nil,   127,   nil,   nil,   nil,   nil,   nil,
   nil,   134,   nil,   135,   nil,   nil,   138 ]

racc_goto_check = [
     2,     4,    25,     3,    26,    12,    12,     9,     3,    10,
    10,    10,    10,    10,    10,    10,     2,    26,     3,     3,
     3,    11,    11,    15,    16,    24,     6,     1,    25,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,   nil,   nil,
   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,     3,
   nil,   nil,   nil,   nil,   nil,   nil,     2,     2,   nil,     3,
     3,     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     3,     4,   nil,   nil,   nil,   nil,   nil,
   nil,     2,     3,   nil,   nil,     2,   nil,   nil,   nil,   nil,
   nil,     2,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,
   nil,     3,   nil,     2,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,    27,     0,     0,    -3,   nil,    21,   nil,   nil,   -47,
   -46,   -41,   -59,   nil,   nil,   -46,   -46,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   -20,   -99,  -121 ]

racc_goto_default = [
   nil,   nil,   nil,    38,   nil,     5,     6,     9,    26,   nil,
    27,    28,    29,    30,    39,    40,    41,    10,    11,    12,
    13,    14,    15,    16,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 54, :_reduce_none,
  2, 54, :_reduce_2,
  2, 54, :_reduce_3,
  0, 55, :_reduce_4,
  1, 55, :_reduce_5,
  1, 58, :_reduce_none,
  2, 58, :_reduce_7,
  1, 59, :_reduce_8,
  3, 59, :_reduce_9,
  1, 59, :_reduce_none,
  1, 56, :_reduce_none,
  3, 56, :_reduce_12,
  1, 62, :_reduce_13,
  3, 62, :_reduce_14,
  1, 61, :_reduce_none,
  3, 61, :_reduce_16,
  3, 61, :_reduce_17,
  3, 61, :_reduce_18,
  3, 61, :_reduce_19,
  3, 61, :_reduce_20,
  3, 61, :_reduce_21,
  3, 61, :_reduce_22,
  1, 63, :_reduce_none,
  3, 63, :_reduce_24,
  3, 63, :_reduce_25,
  1, 64, :_reduce_none,
  3, 64, :_reduce_27,
  3, 64, :_reduce_28,
  1, 65, :_reduce_none,
  3, 65, :_reduce_30,
  4, 65, :_reduce_31,
  1, 66, :_reduce_32,
  1, 66, :_reduce_33,
  1, 66, :_reduce_34,
  1, 66, :_reduce_35,
  1, 66, :_reduce_36,
  3, 66, :_reduce_37,
  0, 57, :_reduce_38,
  1, 57, :_reduce_39,
  1, 57, :_reduce_40,
  3, 57, :_reduce_41,
  1, 67, :_reduce_none,
  3, 67, :_reduce_43,
  1, 68, :_reduce_44,
  3, 68, :_reduce_45,
  2, 69, :_reduce_46,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  3, 60, :_reduce_53,
  3, 76, :_reduce_54,
  1, 77, :_reduce_55,
  5, 70, :_reduce_56,
  1, 78, :_reduce_57,
  3, 78, :_reduce_58,
  5, 78, :_reduce_59,
  5, 71, :_reduce_60,
  8, 72, :_reduce_61,
  1, 79, :_reduce_62,
  4, 79, :_reduce_63,
  5, 79, :_reduce_64,
  7, 73, :_reduce_65,
  5, 74, :_reduce_66,
  5, 75, :_reduce_67 ]

racc_reduce_n = 68

racc_shift_n = 140

racc_token_table = {
  false => 0,
  :error => 1,
  :PIPE => 2,
  :DOT => 3,
  :DOTDOT => 4,
  :COLON => 5,
  :COMMA => 6,
  :TIMES => 7,
  :DIV => 8,
  :PLUS => 9,
  :MINUS => 10,
  :EQ => 11,
  :EQEQ => 12,
  :NE => 13,
  :LT => 14,
  :LE => 15,
  :GT => 16,
  :GE => 17,
  :CONTAINS => 18,
  :MUSTACHEOPEN => 19,
  :MUSTACHECLOSE => 20,
  :TAGOPEN => 21,
  :TAGCLOSE => 22,
  :PARENOPEN => 23,
  :PARENCLOSE => 24,
  :BRACKETOPEN => 25,
  :BRACKETCLOSE => 26,
  :TEXT => 27,
  :IDENT => 28,
  :KEYWORD => 29,
  :NUMBER => 30,
  :STRING => 31,
  :TRUE => 32,
  :FALSE => 33,
  :GOTOEXPRESSION => 34,
  :GOTOARGLIST => 35,
  :MARKUP => 36,
  :ENDBLOCK => 37,
  :IF => 38,
  :ELSIF => 39,
  :ELSE => 40,
  :ENDIF => 41,
  :UNLESS => 42,
  :ENDUNLESS => 43,
  :CASE => 44,
  :WHEN => 45,
  :ENDCASE => 46,
  :FOR => 47,
  :IN => 48,
  :ENDFOR => 49,
  :ASSIGN => 50,
  :CAPTURE => 51,
  :ENDCAPTURE => 52 }

racc_nt_base = 53

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "PIPE",
  "DOT",
  "DOTDOT",
  "COLON",
  "COMMA",
  "TIMES",
  "DIV",
  "PLUS",
  "MINUS",
  "EQ",
  "EQEQ",
  "NE",
  "LT",
  "LE",
  "GT",
  "GE",
  "CONTAINS",
  "MUSTACHEOPEN",
  "MUSTACHECLOSE",
  "TAGOPEN",
  "TAGCLOSE",
  "PARENOPEN",
  "PARENCLOSE",
  "BRACKETOPEN",
  "BRACKETCLOSE",
  "TEXT",
  "IDENT",
  "KEYWORD",
  "NUMBER",
  "STRING",
  "TRUE",
  "FALSE",
  "GOTOEXPRESSION",
  "GOTOARGLIST",
  "MARKUP",
  "ENDBLOCK",
  "IF",
  "ELSIF",
  "ELSE",
  "ENDIF",
  "UNLESS",
  "ENDUNLESS",
  "CASE",
  "WHEN",
  "ENDCASE",
  "FOR",
  "IN",
  "ENDFOR",
  "ASSIGN",
  "CAPTURE",
  "ENDCAPTURE",
  "$start",
  "Liquid",
  "Document",
  "Expression",
  "ArgList",
  "DocumentElementList",
  "DocumentElement",
  "Block",
  "ComparisonExpression",
  "Filter",
  "AdditiveExpression",
  "MultiplicativeExpression",
  "CallExpression",
  "PrimaryExpression",
  "PosArgList",
  "OptArgList",
  "OptArg",
  "IfStatement",
  "UnlessStatement",
  "CaseStatement",
  "ForStatement",
  "AssignStatement",
  "CaptureStatement",
  "BlockHead",
  "BlockTail",
  "IfContinuation",
  "CaseContinuation" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'liquid.y', 24)
  def _reduce_2(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 25)
  def _reduce_3(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 29)
  def _reduce_4(val, _values, result)
     result = Ast::DocumentNode.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 30)
  def _reduce_5(val, _values, result)
     result = Ast::DocumentNode.new([val].flatten) 
    result
  end
.,.,

# reduce 6 omitted

module_eval(<<'.,.,', 'liquid.y', 35)
  def _reduce_7(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 39)
  def _reduce_8(val, _values, result)
     result = Ast::TextNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 40)
  def _reduce_9(val, _values, result)
     result = Ast::MustacheNode.new(val[1]) 
    result
  end
.,.,

# reduce 10 omitted

# reduce 11 omitted

module_eval(<<'.,.,', 'liquid.y', 47)
  def _reduce_12(val, _values, result)
          result = val[2]
      result.arg_list.positionals.unshift(val[0])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 53)
  def _reduce_13(val, _values, result)
     result = Ast::FilterNode.new(val[0], Ast::ArgListNode.new([], [])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 54)
  def _reduce_14(val, _values, result)
     result = Ast::FilterNode.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 15 omitted

module_eval(<<'.,.,', 'liquid.y', 59)
  def _reduce_16(val, _values, result)
     result = Ast::BinOpNode.new(:==, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 60)
  def _reduce_17(val, _values, result)
     result = Ast::BinOpNode.new(:!=, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 61)
  def _reduce_18(val, _values, result)
     result = Ast::BinOpNode.new(:<, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 62)
  def _reduce_19(val, _values, result)
     result = Ast::BinOpNode.new(:<=, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 63)
  def _reduce_20(val, _values, result)
     result = Ast::BinOpNode.new(:>, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 64)
  def _reduce_21(val, _values, result)
     result = Ast::BinOpNode.new(:>=, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 65)
  def _reduce_22(val, _values, result)
     result = Ast::BinOpNode.new(:contains, val[0], val[2]) 
    result
  end
.,.,

# reduce 23 omitted

module_eval(<<'.,.,', 'liquid.y', 70)
  def _reduce_24(val, _values, result)
     result = Ast::BinOpNode.new(:+, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 71)
  def _reduce_25(val, _values, result)
     result = Ast::BinOpNode.new(:-, val[0], val[2], :-) 
    result
  end
.,.,

# reduce 26 omitted

module_eval(<<'.,.,', 'liquid.y', 76)
  def _reduce_27(val, _values, result)
     result = Ast::BinOpNode.new(:*, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 77)
  def _reduce_28(val, _values, result)
     result = Ast::BinOpNode.new(:'/', val[0], val[2]) 
    result
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'liquid.y', 82)
  def _reduce_30(val, _values, result)
     result = Ast::CallNode.new(val[0], Ast::SymbolNode.new(val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 83)
  def _reduce_31(val, _values, result)
     result = Ast::IndexNode.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 87)
  def _reduce_32(val, _values, result)
     result = Ast::SymbolNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 88)
  def _reduce_33(val, _values, result)
     result = Ast::StringNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 89)
  def _reduce_34(val, _values, result)
     result = Ast::NumberNode.new(val[0].to_i) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 90)
  def _reduce_35(val, _values, result)
     result = Ast::BooleanNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 91)
  def _reduce_36(val, _values, result)
     result = Ast::BooleanNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 92)
  def _reduce_37(val, _values, result)
     result = Ast::ParenthesisedNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 96)
  def _reduce_38(val, _values, result)
     result = Ast::ArgListNode.new([], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 97)
  def _reduce_39(val, _values, result)
     result = Ast::ArgListNode.new(val[0], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 98)
  def _reduce_40(val, _values, result)
     result = Ast::ArgListNode.new([], val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 99)
  def _reduce_41(val, _values, result)
     result = Ast::ArgListNode.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 42 omitted

module_eval(<<'.,.,', 'liquid.y', 104)
  def _reduce_43(val, _values, result)
     result = [val[0], val[2]].flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 108)
  def _reduce_44(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 110)
  def _reduce_45(val, _values, result)
          opt_arg_list, _, opt_arg = val
      if opt_arg_list.map(&:key).include?(opt_arg.key)
        raise LiquiderSyntaxError.new(%Q<Duplicate key "#{opt_arg.key}" in option list.>)
      end
      result = val[0] + [val[2]]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 119)
  def _reduce_46(val, _values, result)
     result = Ast::OptionPairNode.new(val[0].chomp(':'), val[1]) 
    result
  end
.,.,

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

module_eval(<<'.,.,', 'liquid.y', 130)
  def _reduce_53(val, _values, result)
          head, document, tail = val
      unless head.tag_name == tail.tag_name
        raise LiquiderSyntaxError.new(%Q<Expected "{% end#{head.tag_name} %}", but found "{% end#{tail.tag_name} %}".>)
      end
      parsed_markup = tags[head.tag_name].parse_markup(head.markup)
      result = Ast::TagNode.new(head.tag_name, parsed_markup, document)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 141)
  def _reduce_54(val, _values, result)
          tag_head, markup, _ = val
      tag_name = tag_head.gsub(/\{%\s*/, '')
      inject_token([:ENDBLOCK, "{%end#{tag_name}%}"]) unless tag_with_name(tag_name).block?
      result = BlockHead.new(tag_name, markup)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 149)
  def _reduce_55(val, _values, result)
     result = BlockTail.from_token(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 154)
  def _reduce_56(val, _values, result)
          _, head, _, document, continuation = *val
      result = Ast::IfNode.new(head, document, continuation)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 161)
  def _reduce_57(val, _values, result)
          result = Ast::NullNode.new
    
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 164)
  def _reduce_58(val, _values, result)
          _, body, _ = *val
      result = Ast::ElseNode.new(body)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 168)
  def _reduce_59(val, _values, result)
          _, head, _, body, continuation = *val
      result = Ast::IfNode.new(head, body, continuation)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 175)
  def _reduce_60(val, _values, result)
          _, head, _, body, _ = *val
      result = Ast::IfNode.new(Ast::NegationNode.new(head), body, Ast::NullNode.new)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 182)
  def _reduce_61(val, _values, result)
          _, head, _, _, first_case, _, first_value, rest = *val
      result = Ast::CaseNode.new(head, [WhenNode.new(first_case, first_value), *rest])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 188)
  def _reduce_62(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 189)
  def _reduce_63(val, _values, result)
     result = [CaseElseNode.new(val[2])] 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 190)
  def _reduce_64(val, _values, result)
     result = [WhenNode.new(val[1], val[3]), *val[4]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 195)
  def _reduce_65(val, _values, result)
          _, binding, _, expression, _, body, _ = *val
      result = Ast::ForNode.new(Ast::SymbolNode.new(binding), expression, body)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 202)
  def _reduce_66(val, _values, result)
          _, binding, _, value = *val
      result = Ast::AssignNode.new(Ast::SymbolNode.new(binding), value)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 209)
  def _reduce_67(val, _values, result)
          _, binding, _, document, _ = *val
      result = Ast::CaptureNode.new(Ast::SymbolNode.new(binding), document)
    
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class GeneratedParser
  end   # module Liquider
