#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Liquider
  class GeneratedParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    34,    34,    34,    20,    50,     6,     6,    21,    15,    17,
    16,    18,    19,     4,     4,    30,    31,    30,    31,    20,
    48,    35,    35,    35,    15,    17,    16,    18,    19,    20,
    32,    33,    32,    33,    15,    17,    16,    18,    19,    20,
    32,    33,    30,    31,    15,    17,    16,    18,    19,    20,
    30,    31,    30,    31,    15,    17,    16,    18,    19,    20,
    30,    31,    30,    31,    15,    17,    16,    18,    19,    20,
    30,    31,    22,     7,    15,    17,    16,    18,    19,    20,
    51,   nil,   nil,   nil,    15,    17,    16,    18,    19,    20,
   nil,   nil,   nil,   nil,    15,    17,    16,    18,    19,    20,
   nil,   nil,   nil,   nil,    15,    17,    16,    18,    19,    20,
   nil,   nil,   nil,   nil,    15,    17,    16,    18,    19,    20,
   nil,   nil,   nil,   nil,    15,    17,    16,    18,    19,    20,
   nil,   nil,   nil,   nil,    15,    17,    16,    18,    19,    20,
   nil,   nil,   nil,   nil,    15,    17,    16,    18,    19,    23,
    24,    25,    26,    27,    28,    29 ]

racc_action_check = [
    47,    13,    46,    29,    36,     0,     2,     7,    29,    29,
    29,    29,    29,     0,     2,    43,    43,    11,    11,    35,
    34,    47,    13,    46,    35,    35,    35,    35,    35,    33,
    45,    45,    44,    44,    33,    33,    33,    33,    33,    32,
    12,    12,    37,    37,    32,    32,    32,    32,    32,    31,
    38,    38,    42,    42,    31,    31,    31,    31,    31,     6,
    40,    40,    41,    41,     6,     6,     6,     6,     6,    30,
    39,    39,     9,     1,    30,    30,    30,    30,    30,    20,
    49,   nil,   nil,   nil,    20,    20,    20,    20,    20,    23,
   nil,   nil,   nil,   nil,    23,    23,    23,    23,    23,    24,
   nil,   nil,   nil,   nil,    24,    24,    24,    24,    24,    25,
   nil,   nil,   nil,   nil,    25,    25,    25,    25,    25,    26,
   nil,   nil,   nil,   nil,    26,    26,    26,    26,    26,    27,
   nil,   nil,   nil,   nil,    27,    27,    27,    27,    27,    28,
   nil,   nil,   nil,   nil,    28,    28,    28,    28,    28,    10,
    10,    10,    10,    10,    10,    10 ]

racc_action_pointer = [
   -13,    73,   -12,   nil,   nil,   nil,    37,     7,   nil,    53,
   138,     8,    33,    -2,   nil,   nil,   nil,   nil,   nil,   nil,
    57,   nil,   nil,    67,    77,    87,    97,   107,   117,   -19,
    47,    27,    17,     7,    -7,    -3,   -19,    33,    41,    61,
    51,    53,    43,     6,    25,    23,    -1,    -3,   nil,    55,
   nil,   nil ]

racc_action_default = [
    -1,   -32,    -2,    -3,    -5,    -6,   -32,   -32,    -4,   -32,
    -8,    -9,   -17,   -20,   -23,   -26,   -27,   -28,   -29,   -30,
   -32,    52,    -7,   -32,   -32,   -32,   -32,   -32,   -32,   -32,
   -32,   -32,   -32,   -32,   -32,   -32,   -32,   -10,   -11,   -12,
   -13,   -14,   -15,   -16,   -18,   -19,   -21,   -22,   -24,   -32,
   -31,   -25 ]

racc_goto_table = [
     9,    37,    38,    39,    40,    41,    42,    43,     3,     2,
     8,    44,    45,     1,    36,    46,    47,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    49 ]

racc_goto_check = [
     5,     7,     7,     7,     7,     7,     7,     7,     3,     2,
     3,     8,     8,     1,     5,     9,     9,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5 ]

racc_goto_pointer = [
   nil,    13,     9,     8,   nil,    -6,   nil,   -22,   -19,   -17,
   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     5,   nil,    10,    11,    12,    13,
    14 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 33, :_reduce_1,
  1, 33, :_reduce_2,
  1, 34, :_reduce_none,
  2, 34, :_reduce_4,
  1, 35, :_reduce_5,
  1, 35, :_reduce_none,
  3, 36, :_reduce_7,
  1, 37, :_reduce_none,
  1, 38, :_reduce_none,
  3, 38, :_reduce_10,
  3, 38, :_reduce_11,
  3, 38, :_reduce_12,
  3, 38, :_reduce_13,
  3, 38, :_reduce_14,
  3, 38, :_reduce_15,
  3, 38, :_reduce_16,
  1, 39, :_reduce_none,
  3, 39, :_reduce_18,
  3, 39, :_reduce_19,
  1, 40, :_reduce_none,
  3, 40, :_reduce_21,
  3, 40, :_reduce_22,
  1, 41, :_reduce_none,
  3, 41, :_reduce_24,
  4, 41, :_reduce_25,
  1, 42, :_reduce_26,
  1, 42, :_reduce_27,
  1, 42, :_reduce_28,
  1, 42, :_reduce_29,
  1, 42, :_reduce_30,
  3, 42, :_reduce_31 ]

racc_reduce_n = 32

racc_shift_n = 52

racc_token_table = {
  false => 0,
  :error => 1,
  :PIPE => 2,
  :DOT => 3,
  :DOTDOT => 4,
  :COLON => 5,
  :COMMA => 6,
  :TIMES => 7,
  :DIV => 8,
  :PLUS => 9,
  :MINUS => 10,
  :EQ => 11,
  :NE => 12,
  :LT => 13,
  :LE => 14,
  :GT => 15,
  :GE => 16,
  :CONTAINS => 17,
  :MUSTACHEOPEN => 18,
  :MUSTACHECLOSE => 19,
  :TAGOPEN => 20,
  :TAGCLOSE => 21,
  :PARENOPEN => 22,
  :PARENCLOSE => 23,
  :BRACKETOPEN => 24,
  :BRACKETCLOSE => 25,
  :TEXT => 26,
  :IDENT => 27,
  :NUMBER => 28,
  :STRING => 29,
  :TRUE => 30,
  :FALSE => 31 }

racc_nt_base = 32

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "PIPE",
  "DOT",
  "DOTDOT",
  "COLON",
  "COMMA",
  "TIMES",
  "DIV",
  "PLUS",
  "MINUS",
  "EQ",
  "NE",
  "LT",
  "LE",
  "GT",
  "GE",
  "CONTAINS",
  "MUSTACHEOPEN",
  "MUSTACHECLOSE",
  "TAGOPEN",
  "TAGCLOSE",
  "PARENOPEN",
  "PARENCLOSE",
  "BRACKETOPEN",
  "BRACKETCLOSE",
  "TEXT",
  "IDENT",
  "NUMBER",
  "STRING",
  "TRUE",
  "FALSE",
  "$start",
  "Document",
  "DocumentElementList",
  "DocumentElement",
  "Mustache",
  "Expression",
  "ComparisonExpression",
  "AdditiveExpression",
  "MultiplicativeExpression",
  "CallExpression",
  "PrimaryExpression" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'liquid.y', 15)
  def _reduce_1(val, _values, result)
     result = Ast::DocumentNode.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 16)
  def _reduce_2(val, _values, result)
     result = Ast::DocumentNode.new([val].flatten) 
    result
  end
.,.,

# reduce 3 omitted

module_eval(<<'.,.,', 'liquid.y', 21)
  def _reduce_4(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 25)
  def _reduce_5(val, _values, result)
     result = Ast::TextNode.new(val[0]) 
    result
  end
.,.,

# reduce 6 omitted

module_eval(<<'.,.,', 'liquid.y', 30)
  def _reduce_7(val, _values, result)
     result = Ast::MustacheNode.new(val[1]) 
    result
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

module_eval(<<'.,.,', 'liquid.y', 39)
  def _reduce_10(val, _values, result)
     result = Ast::BinOpNode.new(val[0], val[2], :==) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 40)
  def _reduce_11(val, _values, result)
     result = Ast::BinOpNode.new(val[0], val[2], :!=) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 41)
  def _reduce_12(val, _values, result)
     result = Ast::BinOpNode.new(val[0], val[2], :<) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 42)
  def _reduce_13(val, _values, result)
     result = Ast::BinOpNode.new(val[0], val[2], :<=) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 43)
  def _reduce_14(val, _values, result)
     result = Ast::BinOpNode.new(val[0], val[2], :>) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 44)
  def _reduce_15(val, _values, result)
     result = Ast::BinOpNode.new(val[0], val[2], :>=) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 45)
  def _reduce_16(val, _values, result)
     result = Ast::BinOpNode.new(val[0], val[2], :contains) 
    result
  end
.,.,

# reduce 17 omitted

module_eval(<<'.,.,', 'liquid.y', 50)
  def _reduce_18(val, _values, result)
     result = Ast::BinOpNode.new(val[0], val[2], :+) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 51)
  def _reduce_19(val, _values, result)
     result = Ast::BinOpNode.new(val[0], val[2], :-) 
    result
  end
.,.,

# reduce 20 omitted

module_eval(<<'.,.,', 'liquid.y', 56)
  def _reduce_21(val, _values, result)
     result = Ast::BinOpNode.new(val[0], val[2], :*) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 57)
  def _reduce_22(val, _values, result)
     result = Ast::BinOpNode.new(val[0], val[2], :'/') 
    result
  end
.,.,

# reduce 23 omitted

module_eval(<<'.,.,', 'liquid.y', 62)
  def _reduce_24(val, _values, result)
     result = Ast::CallNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 63)
  def _reduce_25(val, _values, result)
     result = Ast::IndexNode.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 67)
  def _reduce_26(val, _values, result)
     result = Ast::SymbolNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 68)
  def _reduce_27(val, _values, result)
     result = Ast::StringNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 69)
  def _reduce_28(val, _values, result)
     result = Ast::NumberNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 70)
  def _reduce_29(val, _values, result)
     result = Ast::BooleanNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 71)
  def _reduce_30(val, _values, result)
     result = Ast::BooleanNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 72)
  def _reduce_31(val, _values, result)
     result = Ast::ParenthesisedNode.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class GeneratedParser
  end   # module Liquider
