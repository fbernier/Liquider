#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Liquider
  class GeneratedParser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
    40,    40,    40,     7,    46,    10,    61,    23,    36,    37,
    60,     6,    18,    20,    19,    21,    22,     3,    58,    23,
    27,    41,    41,    41,    18,    20,    19,    21,    22,    23,
    36,    37,    38,    39,    18,    20,    19,    21,    22,    23,
    38,    39,    38,    39,    18,    20,    19,    21,    22,    23,
    36,    37,    36,    37,    18,    20,    19,    21,    22,    23,
    36,    37,    36,    37,    18,    20,    19,    21,    22,    23,
    36,    37,    36,    37,    18,    20,    19,    21,    22,    23,
    28,    43,    45,    11,    18,    20,    19,    21,    22,    23,
    62,   nil,   nil,   nil,    18,    20,    19,    21,    22,    23,
   nil,   nil,   nil,   nil,    18,    20,    19,    21,    22,    23,
   nil,   nil,   nil,   nil,    18,    20,    19,    21,    22,    23,
   nil,   nil,   nil,   nil,    18,    20,    19,    21,    22,    23,
   nil,   nil,   nil,   nil,    18,    20,    19,    21,    22,    23,
   nil,   nil,   nil,   nil,    18,    20,    19,    21,    22,    23,
   nil,     7,   nil,    10,    18,    20,    19,    21,    22,     6,
     7,   nil,    10,   nil,   nil,   nil,   nil,   nil,     6,    29,
    30,    31,    32,    33,    34,    35 ]

racc_action_check = [
    56,    57,    16,     0,    27,     0,    46,    36,    53,    53,
    42,     0,    36,    36,    36,    36,    36,     0,    40,    41,
    10,    56,    57,    16,    41,    41,    41,    41,    41,    39,
    14,    14,    55,    55,    39,    39,    39,    39,    39,    38,
    54,    54,    15,    15,    38,    38,    38,    38,    38,    37,
    52,    52,    47,    47,    37,    37,    37,    37,    37,     7,
    51,    51,    50,    50,     7,     7,     7,     7,     7,    35,
    49,    49,    48,    48,    35,    35,    35,    35,    35,     3,
    11,    25,    26,     1,     3,     3,     3,     3,     3,    23,
    59,   nil,   nil,   nil,    23,    23,    23,    23,    23,    31,
   nil,   nil,   nil,   nil,    31,    31,    31,    31,    31,    33,
   nil,   nil,   nil,   nil,    33,    33,    33,    33,    33,    32,
   nil,   nil,   nil,   nil,    32,    32,    32,    32,    32,    29,
   nil,   nil,   nil,   nil,    29,    29,    29,    29,    29,    30,
   nil,   nil,   nil,   nil,    30,    30,    30,    30,    30,    34,
   nil,     4,   nil,     4,    34,    34,    34,    34,    34,     4,
     9,   nil,     9,   nil,   nil,   nil,   nil,   nil,     9,    13,
    13,    13,    13,    13,    13,    13 ]

racc_action_pointer = [
   -15,    83,   nil,    57,   133,   nil,   nil,    37,   nil,   142,
    -7,    80,   nil,   158,    21,    35,    -1,   nil,   nil,   nil,
   nil,   nil,   nil,    67,   nil,    62,    47,   -30,   nil,   107,
   117,    77,    97,    87,   127,    47,   -15,    27,    17,     7,
    -9,    -3,   -13,   nil,   nil,   nil,   -15,    43,    63,    61,
    53,    51,    41,    -1,    33,    25,    -3,    -2,   nil,    65,
   nil,   nil,   nil ]

racc_action_default = [
    -3,   -37,    -1,   -37,    -4,    -5,    -7,   -37,    -9,    -3,
   -37,   -37,    -2,   -10,   -11,   -19,   -22,   -25,   -28,   -29,
   -30,   -31,   -32,   -37,    -6,   -37,   -37,   -37,    63,   -37,
   -37,   -37,   -37,   -37,   -37,   -37,   -37,   -37,   -37,   -37,
   -37,   -37,   -37,    -8,   -34,   -36,   -37,   -12,   -13,   -14,
   -15,   -16,   -17,   -18,   -20,   -21,   -23,   -24,   -26,   -37,
   -33,   -35,   -27 ]

racc_goto_table = [
    12,     2,    56,    57,    25,    54,    55,     1,    24,    44,
    26,    47,    48,    49,    50,    51,    52,    53,   nil,   nil,
    42,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    59 ]

racc_goto_check = [
     3,     2,    10,    10,     3,     9,     9,     1,     5,    13,
     2,     8,     8,     8,     8,     8,     8,     8,   nil,   nil,
     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3 ]

racc_goto_pointer = [
   nil,     7,     1,    -3,   nil,     4,   nil,   nil,   -18,   -31,
   -36,   nil,   nil,   -17 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     4,     5,     8,    13,    14,    15,
    16,    17,     9,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 37, :_reduce_none,
  2, 37, :_reduce_2,
  0, 38, :_reduce_3,
  1, 38, :_reduce_4,
  1, 40, :_reduce_none,
  2, 40, :_reduce_6,
  1, 41, :_reduce_7,
  3, 41, :_reduce_8,
  1, 41, :_reduce_none,
  1, 39, :_reduce_none,
  1, 43, :_reduce_none,
  3, 43, :_reduce_12,
  3, 43, :_reduce_13,
  3, 43, :_reduce_14,
  3, 43, :_reduce_15,
  3, 43, :_reduce_16,
  3, 43, :_reduce_17,
  3, 43, :_reduce_18,
  1, 44, :_reduce_none,
  3, 44, :_reduce_20,
  3, 44, :_reduce_21,
  1, 45, :_reduce_none,
  3, 45, :_reduce_23,
  3, 45, :_reduce_24,
  1, 46, :_reduce_none,
  3, 46, :_reduce_26,
  4, 46, :_reduce_27,
  1, 47, :_reduce_28,
  1, 47, :_reduce_29,
  1, 47, :_reduce_30,
  1, 47, :_reduce_31,
  1, 47, :_reduce_32,
  3, 47, :_reduce_33,
  3, 42, :_reduce_34,
  4, 48, :_reduce_35,
  1, 49, :_reduce_36 ]

racc_reduce_n = 37

racc_shift_n = 63

racc_token_table = {
  false => 0,
  :error => 1,
  :PIPE => 2,
  :DOT => 3,
  :DOTDOT => 4,
  :COLON => 5,
  :COMMA => 6,
  :TIMES => 7,
  :DIV => 8,
  :PLUS => 9,
  :MINUS => 10,
  :EQ => 11,
  :NE => 12,
  :LT => 13,
  :LE => 14,
  :GT => 15,
  :GE => 16,
  :CONTAINS => 17,
  :MUSTACHEOPEN => 18,
  :MUSTACHECLOSE => 19,
  :TAGOPEN => 20,
  :TAGCLOSE => 21,
  :PARENOPEN => 22,
  :PARENCLOSE => 23,
  :BRACKETOPEN => 24,
  :BRACKETCLOSE => 25,
  :TEXT => 26,
  :IDENT => 27,
  :NUMBER => 28,
  :STRING => 29,
  :TRUE => 30,
  :FALSE => 31,
  :GOTO_EXPRESSION => 32,
  :GOTO_ARGLIST => 33,
  :MARKUP => 34,
  :BLOCKTAIL => 35 }

racc_nt_base = 36

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "PIPE",
  "DOT",
  "DOTDOT",
  "COLON",
  "COMMA",
  "TIMES",
  "DIV",
  "PLUS",
  "MINUS",
  "EQ",
  "NE",
  "LT",
  "LE",
  "GT",
  "GE",
  "CONTAINS",
  "MUSTACHEOPEN",
  "MUSTACHECLOSE",
  "TAGOPEN",
  "TAGCLOSE",
  "PARENOPEN",
  "PARENCLOSE",
  "BRACKETOPEN",
  "BRACKETCLOSE",
  "TEXT",
  "IDENT",
  "NUMBER",
  "STRING",
  "TRUE",
  "FALSE",
  "GOTO_EXPRESSION",
  "GOTO_ARGLIST",
  "MARKUP",
  "BLOCKTAIL",
  "$start",
  "Liquid",
  "Document",
  "Expression",
  "DocumentElementList",
  "DocumentElement",
  "Block",
  "ComparisonExpression",
  "AdditiveExpression",
  "MultiplicativeExpression",
  "CallExpression",
  "PrimaryExpression",
  "BlockHead",
  "BlockTail" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'liquid.y', 20)
  def _reduce_2(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 25)
  def _reduce_3(val, _values, result)
     result = Ast::DocumentNode.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 26)
  def _reduce_4(val, _values, result)
     result = Ast::DocumentNode.new([val].flatten) 
    result
  end
.,.,

# reduce 5 omitted

module_eval(<<'.,.,', 'liquid.y', 31)
  def _reduce_6(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 35)
  def _reduce_7(val, _values, result)
     result = Ast::TextNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 36)
  def _reduce_8(val, _values, result)
     result = Ast::MustacheNode.new(val[1]) 
    result
  end
.,.,

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

module_eval(<<'.,.,', 'liquid.y', 46)
  def _reduce_12(val, _values, result)
     result = Ast::BinOpNode.new(:==, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 47)
  def _reduce_13(val, _values, result)
     result = Ast::BinOpNode.new(:!=, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 48)
  def _reduce_14(val, _values, result)
     result = Ast::BinOpNode.new(:<, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 49)
  def _reduce_15(val, _values, result)
     result = Ast::BinOpNode.new(:<=, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 50)
  def _reduce_16(val, _values, result)
     result = Ast::BinOpNode.new(:>, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 51)
  def _reduce_17(val, _values, result)
     result = Ast::BinOpNode.new(:>=, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 52)
  def _reduce_18(val, _values, result)
     result = Ast::BinOpNode.new(:contains, val[0], val[2]) 
    result
  end
.,.,

# reduce 19 omitted

module_eval(<<'.,.,', 'liquid.y', 57)
  def _reduce_20(val, _values, result)
     result = Ast::BinOpNode.new(:+, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 58)
  def _reduce_21(val, _values, result)
     result = Ast::BinOpNode.new(:-, val[0], val[2], :-) 
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'liquid.y', 63)
  def _reduce_23(val, _values, result)
     result = Ast::BinOpNode.new(:*, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 64)
  def _reduce_24(val, _values, result)
     result = Ast::BinOpNode.new(:'/', val[0], val[2]) 
    result
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'liquid.y', 69)
  def _reduce_26(val, _values, result)
     result = Ast::CallNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 70)
  def _reduce_27(val, _values, result)
     result = Ast::IndexNode.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 74)
  def _reduce_28(val, _values, result)
     result = Ast::SymbolNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 75)
  def _reduce_29(val, _values, result)
     result = Ast::StringNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 76)
  def _reduce_30(val, _values, result)
     result = Ast::NumberNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 77)
  def _reduce_31(val, _values, result)
     result = Ast::BooleanNode.new(true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 78)
  def _reduce_32(val, _values, result)
     result = Ast::BooleanNode.new(false) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 79)
  def _reduce_33(val, _values, result)
     result = Ast::ParenthesisedNode.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 84)
  def _reduce_34(val, _values, result)
          head, document, tail = val
      unless head.tag_name == tail.tag_name
        raise LiquiderSyntaxError.new(%Q<Expected "{% end#{head.tag_name} %}", but found "{% end#{tail.tag_name} %}".>)
      end
      parsed_markup = tags[head.tag_name].parse_markup(head.markup)
      result = Ast::TagNode.new(head.tag_name, parsed_markup, document)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 95)
  def _reduce_35(val, _values, result)
          _, tag_name, markup, _ = val
      inject_token([:BLOCKTAIL, "{% end#{tag_name} %}"]) unless tag_with_name(tag_name).block?
      result = BlockHead.new(tag_name, markup)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'liquid.y', 103)
  def _reduce_36(val, _values, result)
          result = BlockTail.from_source(val[0])
    
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class GeneratedParser
  end   # module Liquider
